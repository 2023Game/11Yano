#include "CApplication.h"
#include "glut.h" //OpenGL
#include "CVector.h"
#include "CTriangle.h"
#include "CModel.h"
#include "CMaterial.h"
#include "CMatrix.h"
#include "CTransform.h"
#include "CEnemy.h"
#include "CCollisionManager.h"
#include "CBillBoard.h"
#include "CColliderLine.h"
#include "CEnemy3.h"
#include "CCamera.h"
#include "CActionCamera.h"

//クラスのstatic変数
CTexture CApplication::mTexture;

#define SOUND_BGM "res\\mario.wav" //BGM音声ファイル
#define SOUND_OVER "res\\mdai.wav" //ゲームオーバー音声ファイル
#define MODEL_OBJ "res\\f14.obj","res\\f14.mtl" //モデルデータの指定
#define MODEL_BACKGROUND "res\\sky.obj", "res\\sky.mtl"
#define MODEL_C5 "res\\c5.obj","res\\c5.mtl"//敵輸送機モデル


CTexture* CApplication::Texture()
{
	return &mTexture;
}


void CApplication::Start()
{
	//カメラの設定
	mActionCamera.Set(5.0f, -15.0f, 180.0f);
	mpPaladin = new CPaladin();
	mpPaladin->Position(CVector(-1.0f, 0.0f, 5.0f));
	//3Dモデルファイルの読み込み
	mModelX.Load(MODEL_FILE);
	mKnight.Load(MODEL_X);
	mKnight.SeparateAnimationSet(0, 10, 80, "walk");//1:移動
	mKnight.SeparateAnimationSet(0, 1530, 1830, "idle1");//2:待機
	mKnight.SeparateAnimationSet(0, 10, 80, "walk");//3:ダミー
	mKnight.SeparateAnimationSet(0, 10, 80, "walk");//4:ダミー
	mKnight.SeparateAnimationSet(0, 10, 80, "walk");//5:ダミー
	mKnight.SeparateAnimationSet(0, 10, 80, "walk");//6:ダミー
	mKnight.SeparateAnimationSet(0, 440, 520, "attack1");//7:Attack1
	mKnight.SeparateAnimationSet(0, 520, 615, "attack2");//8:Attack2
	mKnight.SeparateAnimationSet(0, 10, 80, "walk");//9:ダミー
	mKnight.SeparateAnimationSet(0, 10, 80, "walk");//10:ダミー
	mKnight.SeparateAnimationSet(0, 1160, 1260, "death1");//11:ダウン

	//キャラクターのモデルを設定
	mXPlayer.Init(&mModelX);
	//敵の初期設定
	mXEnemy.Init(&mKnight);
	mXEnemy.ChangeAnimation(2, true, 200);
	//敵の配置
	mXEnemy.Position(CVector(7.0f, 0.0f, 0.0f));
	mFont.Load("FontG.png", 1, 4096 / 64);
}

void CApplication::Update()
{
	
	mXPlayer.Update();//キャラクタクラスの更新
	mXEnemy.Update();//敵の更新
	mpPaladin->Update();
	//衝突処理
	CCollisionManager::Instance()->Collision();

	//カメラ設定
	mActionCamera.Position(mXPlayer.Position()
		+ CVector(0.0f, 2.0f, 0.0f));
	mActionCamera.Update();
	mActionCamera.Render();

	//モデルビュー行列の取得
	glGetFloatv(GL_MODELVIEW_MATRIX, mModelViewInverse.M());
	//逆行列の取得
	mModelViewInverse = mModelViewInverse.Transpose();
	mModelViewInverse.M(0, 3, 0);
	mModelViewInverse.M(1, 3, 0);
	mModelViewInverse.M(2, 3, 0);

	//モデル描画
	mModelX.Render();
	mXPlayer.Render();
	mXEnemy.Render();
	mpPaladin->Render();
	//コライダの描画
	CCollisionManager::Instance()->Render();

	//2D描画開始
	CCamera::Start(0, 800, 0, 600);

	mFont.Draw(20, 20, 10, 12, "3D PROGRAMMING");

	CVector screen;
	//Enemyの座標をスクリーン座標へ変換します
	if (CActionCamera::Instance()->WorldToScreen(&screen, mXEnemy.Position()))
	{
		//変換先の座標に文字列を出力する
		mFont.Draw(screen.X(), screen.Y(), 7, 14, "ENEMY");
	}

	//2Dの描画終了
	CCamera::End();
}

CMatrix CApplication::mModelViewInverse;

const CMatrix& CApplication::ModelViewInverse() {
	return mModelViewInverse;
}

CUi* CApplication::spUi = nullptr;

CUi* CApplication::Ui()
{
	return spUi;//インスタンスのポインタを返す
}

CApplication::~CApplication()
{
	delete spUi;
}